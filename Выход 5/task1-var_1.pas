{Псевдокомментарии и комментарии - не удалять при сдаче программы!}
{$mode TP}
{$R+,B+,X-}
{$codepage UTF-8}      
(**********************************************************************)
{                 ЗАДАЧА 1 (вариант 1)  25 очков                       }
(***********************************************************************
Ввести непустую последовательность символов (конец ввода - точка).  
Если в этой последовательности встречаются символы-цифры, то вывести 
цифру, которая ЧАЩЕ ДРУГИХ встречается в этой последовательности. Если
таких цифр несколько - вывести ЛЮБУЮ ИЗ НИХ. Если в последовательности 
не  было цифр - напечатать 'no numbers'.
************************************************************************
ТРЕБОВАНИЯ: 1) в решении (= в программе) разрешено использовать ТОЛЬКО
ОДНУ ПЕРЕМЕННУЮ; 2) процедур и функций не использовать (других вариантов
решений не предлагать !).  
************************************************************************
ПОДСКАЗКА: В решении следует описать  переменную-запись, в полях которой
хранятся нужные данные. А в основной программе использовать оператор 
присоединения with, в теле которого идёт работа с полями этой записи.
ТОЧКИ для доступа к полям записи - в решении НЕ ИСПОЛЬЗОВАТЬ!
***********************************************************************)
{ ТЕСТЫ, на которых сдавать задачу, следует подготовить самостоятельно }
(**********************************************************************)
program Task_1_var_1(input,output);

    {здесь расположить описание ЕДИНСТВЕННОЙ переменной, больше ничего
     здесь не описывать !!!}
    
type 
    gteu = record
        a: array ['0'..'9'] of integer;
        i, c, im: char;
        max: integer;
    end;
var
    R: gteu;
begin
    writeln('============');
    writeln('Task_1_var_1');
    writeln('============');
    {здесь ваше решение в виде ЕДИНСТВЕННОГО оператора with}
    with R do begin
        for i := '0' to '9' do 
            a[i] := 0;
        read(c);
        while c <> '.' do begin
            if c in ['0'..'9'] then 
                a[c] := a[c] + 1;
            read(c);
        end;
        max := a['0'];
        im := '0';
        for i := '1' to '9' do 
            if a[i] > max then begin
                max := a[i];
                im := i;
            end;
        if max = 0 then 
            writeln('no digits')
        else
            writeln(im);
    end;
end.
